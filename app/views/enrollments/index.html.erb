
<% unless @enrollments.first.nil? %>

    <table class="tablesorter" id="enrollmenttable" style="width:100%;">
      <thead>
      <tr>
        <th>
          Opiskelija
        </th>
        <th>
          Opnro
        </th>
        <% @projects.each do |project| %>
            <th title="<%= project.name %>">
              <%= project.name.truncate(4, omission:'') %>
            </th>
        <% end %>
        <th>
          Opiskelijalla projekteja
        </th>
        <th>
          Magic number
        </th>
      </tr>
      </thead>

      <tfoot class="tableSummary">
      <tr>
        <td>Opiskelijoita</td>
        <td></td>
        <% @projects.each do |project| %>

            <td id="<%= project.id %>-ptotal">
              <%= project.amount_of_accepted_students %> / <%= project.maxstudents %>
            </td>
        <% end %>
        <td></td>
        <td></td>
      </tr>
      <tr>
        <td>Täyttöaste</td>
        <td></td>
        <% @projects.each do |project| %>

            <td id="<%= project.id %>-pfill">
              <%= project.amount_of_accepted_students - project.maxstudents %>
            </td>
        <% end %>
        <td></td>
        <td></td>
      </tr>
      </tfoot>

      <tbody>
      <% @enrollments.each do |enrollment| %>

          <tr>
            <td>
              <%= enrollment.name %>[<%= link_to 'x', enrollments_path+"/"+enrollment.id.to_s+"/delete", method: :delete, data: { confirm: 'Haluatko varmasti poistaa ilmoittautumisen?' } %>]
            </td>
            <td>
              <%= enrollment.studentnumber %>
            </td>
            <% @projects.each do |project| %>
                <% signup = enrollment.signups.find_by(project_id:project.id) %>
                <td id="<%= enrollment.id %>-<%= project.id %>" title="<%= "#{enrollment.lastname} #{enrollment.firstname} - #{project.name}" %>" onclick="changeStatus($(this))" class="prioritycell">
                  <%= signup.priority unless signup.nil? or signup.priority == 0 %>
                </td>

            <% end %>
            <td id="<%= enrollment.id %>-etotal" class="tableSummary">
              <%= enrollment.accepted_amount %>
            </td>
            <td id="<%= enrollment.id %>-escore" class="tableSummary">
              <%= enrollment.compute_magic_number %>
            </td>
          </tr>
      <% end %>
      </tr>
      </tbody>
    </table>

<% else %>
    <h2>Ei ilmoittautumisia.</h2>
<% end %>


<% content_for :header do %>
    Ilmoittautumisnäkymä
<% end %>

<script>



    function changeStatus(element) {
        var elementClass = element.attr('class');

        if (elementClass.indexOf('wanted') == -1) {
            if (elementClass.indexOf('forced') >= 0) {
                setForcedStatus(element, false);
            } else {
                setForcedStatus(element, true);
            }
        } else {
            if (elementClass.indexOf('accepted') >= 0) {
                setStatus(element, false);
            } else {
                setStatus(element, true);
            }
        }
    }

    function setForcedStatus(element, newForced) {

        var elementIdArray = element.attr('id').split("-");
        var enrollment_id = elementIdArray[0];
        var project_id = elementIdArray[1];
        $.ajax({
            type: "POST",
            beforeSend: function(xhr) {xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'))},
            url: "setforced",
            data: {enrollment_id: enrollment_id, project_id: project_id, forced: newForced }
        })
                .done(function(msg) {
                    refreshAll();
                });
    }

    function setStatus(element, newStatus) {
        var elementIdArray = element.attr('id').split("-");
        var enrollment_id = elementIdArray[0];
        var project_id = elementIdArray[1];
        $.ajax({
            type: "POST",
            beforeSend: function(xhr) {xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'))},
            url: "setstatus",
            data: {enrollment_id: enrollment_id, project_id: project_id, status: newStatus }
        })
                .done(function(msg) {
                    refreshAll();
                });

    }

    function refreshAll() {
        refreshPriorityCells();
        //refreshSummaryCells();
    }

    function refreshPriorityCells() {
        $.ajax({
            async: false,
            type: "GET",
            beforeSend: function(xhr) {xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'))},
            url: "getstatuses/"
        })
                .done(function(msg) {
                    $('.prioritycell').each(function(index, element) {

                        element = $(this);

                        if (element.attr('class').indexOf('note') >= 0) {
                            element.attr('class', 'prioritycell note');

                        } else {
                            element.attr('class', 'prioritycell');
                        }
                    });

                    $.each(msg, function(index, item) {

                        var selector = item.enrollment_id + "-" + item.project_id;

                        var element = $("#"+selector);

                        if (item.forced) {
                            element.toggleClass('forced', true);
                            element.toggleClass('wanted', false);
                        } else if (item.status) {
                            element.toggleClass('accepted', true);
                            element.toggleClass('wanted', true);
                        } else if (!item.status) {
                            element.toggleClass('accepted', false);
                            element.toggleClass('wanted', true);
                        } else {
                            element.toggleClass('forced', false);
                            element.toggleClass('wanted', false);
                        }


                    });

                });
    }


    $('.prioritycell').bind('contextmenu', function() {
        $(this).toggleClass('note');
        event.preventDefault();
    })

    $(document).ready(function() {
        refreshAll();

        $(function() {
            $( document ).tooltip();
        });

    });

    $(document).ready(function()
            {
                $.tablesorter.formatInt = function (s) {
                    var i = parseInt(s);
                    return (isNaN(i)) ? null : i;
                };
                $.tablesorter.formatFloat = function (s) {
                    var i = parseFloat(s);
                    return (isNaN(i)) ? null : i;
                };
                $("#enrollmenttable").tablesorter();
            }
    );


</script>
